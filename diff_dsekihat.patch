diff --git a/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap2.ini b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap2.ini
new file mode 100644
index 00000000..049743e4
--- /dev/null
+++ b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap2.ini
@@ -0,0 +1,9 @@
+### The setup uses an external event generator
+### This part sets the path of the file and the function call to retrieve it
+
+[GeneratorExternal]
+fileName = ${O2DPG_ROOT}/MC/config/PWGEM/external/generator/Generator_pythia8_GapTriggered_LFee.C
+funcName = GeneratorPythia8GapTriggeredLFee_ForEM(2+1, -1.2, +1.2, 1, 1)
+
+[GeneratorPythia8]
+config = ${O2DPG_ROOT}/MC/config/PWGEM/pythia8/generator/pythia8_MB_gapevent.cfg
diff --git a/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap4.ini b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap4.ini
new file mode 100644
index 00000000..8c048cf0
--- /dev/null
+++ b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap4.ini
@@ -0,0 +1,9 @@
+### The setup uses an external event generator
+### This part sets the path of the file and the function call to retrieve it
+
+[GeneratorExternal]
+fileName = ${O2DPG_ROOT}/MC/config/PWGEM/external/generator/Generator_pythia8_GapTriggered_LFee.C
+funcName = GeneratorPythia8GapTriggeredLFee_ForEM(4+1, -1.2, +1.2, 1, 1)
+
+[GeneratorPythia8]
+config = ${O2DPG_ROOT}/MC/config/PWGEM/pythia8/generator/pythia8_MB_gapevent.cfg
diff --git a/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap6.ini b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap6.ini
new file mode 100644
index 00000000..15057816
--- /dev/null
+++ b/MC/config/PWGEM/ini/Generator_GapTriggered_LFee_random_np1_gap6.ini
@@ -0,0 +1,9 @@
+### The setup uses an external event generator
+### This part sets the path of the file and the function call to retrieve it
+
+[GeneratorExternal]
+fileName = ${O2DPG_ROOT}/MC/config/PWGEM/external/generator/Generator_pythia8_GapTriggered_LFee.C
+funcName = GeneratorPythia8GapTriggeredLFee_ForEM(6+1, -1.2, +1.2, 1, 1)
+
+[GeneratorPythia8]
+config = ${O2DPG_ROOT}/MC/config/PWGEM/pythia8/generator/pythia8_MB_gapevent.cfg
diff --git a/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap2.sh b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap2.sh
new file mode 100644
index 00000000..80a00b6c
--- /dev/null
+++ b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap2.sh
@@ -0,0 +1,50 @@
+#!/bin/bash
+
+#
+# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6
+#
+
+# example anchoring
+# taken from https://its.cern.ch/jira/browse/O2-4586
+export ALIEN_JDL_LPMANCHORPASSNAME=apass6
+export ALIEN_JDL_MCANCHOR=apass6
+export ALIEN_JDL_CPULIMIT=8
+export ALIEN_JDL_LPMRUNNUMBER=526641
+export ALIEN_JDL_LPMPRODUCTIONTYPE=MC
+export ALIEN_JDL_LPMINTERACTIONTYPE=pp
+export ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b
+export ALIEN_JDL_LPMANCHORRUN=526641
+export ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o
+export ALIEN_JDL_LPMANCHORYEAR=2022
+export ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2
+
+export NTIMEFRAMES=1
+export NSIGEVENTS=20
+export SPLITID=100
+export PRODSPLIT=153
+export CYCLE=0
+
+# on the GRID, this is set and used as seed; when set, it takes precedence over SEED
+#export ALIEN_PROC_ID=2963436952
+export SEED=0
+
+# for pp and 50 events per TF, we launch only 4 workers.
+export NWORKERS=4
+
+# define the generator via ini file
+# use 20/40/40 sampling for different generators
+# generate random number
+RNDSIG=$(($RANDOM % 100))
+
+CONFIGNAME="Generator_GapTriggered_LFee_random_np1_gap2.ini"
+
+export ALIEN_JDL_ANCHOR_SIM_OPTIONS="-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME"
+
+# run the central anchor steering script; this includes
+# * derive timestamp
+# * derive interaction rate
+# * extract and prepare configurations (which detectors are contained in the run etc.)
+# * run the simulation (and QC)
+# To disable QC, uncomment the following line
+#export DISABLE_QC=1
+${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh
diff --git a/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap4.sh b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap4.sh
new file mode 100644
index 00000000..6c870626
--- /dev/null
+++ b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap4.sh
@@ -0,0 +1,50 @@
+#!/bin/bash
+
+#
+# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6
+#
+
+# example anchoring
+# taken from https://its.cern.ch/jira/browse/O2-4586
+export ALIEN_JDL_LPMANCHORPASSNAME=apass6
+export ALIEN_JDL_MCANCHOR=apass6
+export ALIEN_JDL_CPULIMIT=8
+export ALIEN_JDL_LPMRUNNUMBER=526641
+export ALIEN_JDL_LPMPRODUCTIONTYPE=MC
+export ALIEN_JDL_LPMINTERACTIONTYPE=pp
+export ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b
+export ALIEN_JDL_LPMANCHORRUN=526641
+export ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o
+export ALIEN_JDL_LPMANCHORYEAR=2022
+export ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2
+
+export NTIMEFRAMES=1
+export NSIGEVENTS=20
+export SPLITID=100
+export PRODSPLIT=153
+export CYCLE=0
+
+# on the GRID, this is set and used as seed; when set, it takes precedence over SEED
+#export ALIEN_PROC_ID=2963436952
+export SEED=0
+
+# for pp and 50 events per TF, we launch only 4 workers.
+export NWORKERS=4
+
+# define the generator via ini file
+# use 20/40/40 sampling for different generators
+# generate random number
+RNDSIG=$(($RANDOM % 100))
+
+CONFIGNAME="Generator_GapTriggered_LFee_random_np1_gap4.ini"
+
+export ALIEN_JDL_ANCHOR_SIM_OPTIONS="-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME"
+
+# run the central anchor steering script; this includes
+# * derive timestamp
+# * derive interaction rate
+# * extract and prepare configurations (which detectors are contained in the run etc.)
+# * run the simulation (and QC)
+# To disable QC, uncomment the following line
+#export DISABLE_QC=1
+${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh
diff --git a/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap6.sh b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap6.sh
new file mode 100644
index 00000000..b01bf810
--- /dev/null
+++ b/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap6.sh
@@ -0,0 +1,50 @@
+#!/bin/bash
+
+#
+# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6
+#
+
+# example anchoring
+# taken from https://its.cern.ch/jira/browse/O2-4586
+export ALIEN_JDL_LPMANCHORPASSNAME=apass6
+export ALIEN_JDL_MCANCHOR=apass6
+export ALIEN_JDL_CPULIMIT=8
+export ALIEN_JDL_LPMRUNNUMBER=526641
+export ALIEN_JDL_LPMPRODUCTIONTYPE=MC
+export ALIEN_JDL_LPMINTERACTIONTYPE=pp
+export ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b
+export ALIEN_JDL_LPMANCHORRUN=526641
+export ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o
+export ALIEN_JDL_LPMANCHORYEAR=2022
+export ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2
+
+export NTIMEFRAMES=1
+export NSIGEVENTS=20
+export SPLITID=100
+export PRODSPLIT=153
+export CYCLE=0
+
+# on the GRID, this is set and used as seed; when set, it takes precedence over SEED
+#export ALIEN_PROC_ID=2963436952
+export SEED=0
+
+# for pp and 50 events per TF, we launch only 4 workers.
+export NWORKERS=4
+
+# define the generator via ini file
+# use 20/40/40 sampling for different generators
+# generate random number
+RNDSIG=$(($RANDOM % 100))
+
+CONFIGNAME="Generator_GapTriggered_LFee_random_np1_gap6.ini"
+
+export ALIEN_JDL_ANCHOR_SIM_OPTIONS="-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME"
+
+# run the central anchor steering script; this includes
+# * derive timestamp
+# * derive interaction rate
+# * extract and prepare configurations (which detectors are contained in the run etc.)
+# * run the simulation (and QC)
+# To disable QC, uncomment the following line
+#export DISABLE_QC=1
+${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh
diff --git a/diff.patch b/diff.patch
new file mode 100644
index 00000000..e69de29b
